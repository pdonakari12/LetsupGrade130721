#include <algorithm>
#include <iostream>
#include <vector>

using namespace std;

class Node{
	public:
	int data;
	Node *add;
};

void Insertatend(Node *temp ,int n)
{
	Node *p =new Node;
	p->data=n;
	p->add=NULL;
	while(temp->add!=NULL)
	{
		temp=temp->add;
	}
	temp->add=p;
}



int getLen(Node* head)
    {
        int len = 0;
        Node* temp = head;
        while (temp) {
            len++;
            temp = temp->add;
        }
        return len;
    }
 
    void printMiddle(Node* head)
    { 
        if (head) {
        
            int len = getLen(head);
             Node* temp = head;
 
            
            int midIdx = len / 2;
            while (midIdx--) {
                temp = temp->add;
            }
           
            cout << "The middle element is [" << temp->data
                 << "]" << endl;
        }
    }
	
	void traverse(Node *temp)
{
	while(temp!=NULL)
	{   
		cout<<temp->data<<"\t";
		temp=temp->add;
	}
}


 
int main() {
	
	 Node* head = new Node; 
	 head->data=8;
	head->add=NULL;   
   
        Insertatend(head, 5);   
		Insertatend(head, 3); 
		Insertatend(head, 1); 
		Insertatend(head, 4); 
		Insertatend(head, 8); 
		Insertatend(head, 6); 
		Insertatend(head, 9);
		Insertatend(head, 7);
		traverse(head);
		cout<<endl;
        printMiddle(head);
    
    return 0;   

}
